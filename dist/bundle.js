(()=>{"use strict";var n={12:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{connectedCallback(){this.render(),this.querySelector("form").addEventListener("submit",this.handleSubmit),this.querySelector("#close-btn")?.addEventListener("click",(()=>{this.remove()}))}handleSubmit(n){n.preventDefault();const e=n.target,t=e.email.value.trim(),o=e.password.value;t&&o?(console.log("Inicio de sesión:",{email:t}),alert("¡Bienvenido de nuevo!"),e.reset()):alert("Todos los campos son obligatorios")}render(){this.innerHTML='\n        <div class="min-h-screen flex items-center justify-center bg-gradient-to-b from-black to-gray-900 px-4 py-12">\n          <div class="bg-zinc-900 text-white p-6 rounded-2xl w-full max-w-md shadow-lg relative">\n            <button id="close-btn" class="absolute top-4 right-4 text-red-500 text-2xl font-bold hover:scale-125 transition">&times;</button>\n            \n            <div class="flex justify-center mb-6">\n              <div class="bg-red-600 rounded-full w-16 h-16 flex items-center justify-center text-white text-2xl">\n                🔒\n              </div>\n            </div>\n            \n            <h2 class="text-center text-2xl font-bold mb-4">Iniciar sesión</h2>\n            \n            <form class="flex flex-col gap-4">\n              <input\n                type="email"\n                name="email"\n                placeholder="Correo electrónico"\n                required\n                class="bg-black border border-gray-500 px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"\n              />\n              <input\n                type="password"\n                name="password"\n                placeholder="Contraseña"\n                required\n                class="bg-black border border-gray-500 px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"\n              />\n              <button\n                type="submit"\n                class="bg-red-600 hover:bg-red-700 py-2 rounded-md font-semibold transition"\n              >\n                Iniciar sesión\n              </button>\n            </form>\n          </div>\n        </div>\n      '}}e.default=t},156:function(n,e,t){var o=this&&this.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});const i=o(t(184)),a=o(t(374)),r=o(t(303)),s=o(t(709)),l=o(t(12)),d=o(t(315)),c=o(t(837));customElements.define("header-component",i.default),customElements.define("footer-component",a.default),customElements.define("post-list",r.default),customElements.define("signup-form",s.default),customElements.define("login-form",l.default),customElements.define("post-creator",d.default),customElements.define("explore-page",c.default)},184:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.setupEventListeners()}setupEventListeners(){this.shadowRoot.querySelectorAll(".nav-link").forEach((n=>{n.addEventListener("click",(n=>{"watch"===n.target.getAttribute("data-route")&&this.navigateToExplore()}))}))}navigateToExplore(){const n=document.querySelector("main");n&&(n.innerHTML="<explore-page></explore-page>")}render(){this.shadowRoot.innerHTML='\n      <style>\n        #header {\n            width: 100%;\n            display: flex;\n            flex-direction: row;\n            align-items: center;\n            justify-content: space-evenly;\n            padding: 35px;\n            padding-left: 150px;\n            padding-right: 150px;\n            margin-left: -100px;\n            background: linear-gradient(#111111, transparent)\n        }\n        \n          img {\n            width: 335px;\n          }\n        \n          #navbar {\n            display: flex;\n            align-items: center;\n            justify-content: space-around;\n            width: 810px;\n            gap: 48px;\n          }\n        \n        .nav-link {\n          font-size: 18px;\n          color: white;\n          cursor: pointer;\n          margin: 0;\n          text-transform: uppercase;\n          font-weight: bold;\n          letter-spacing: 1px;\n          position: relative;\n        }\n        \n        .nav-link:hover {\n          color: #FF0808;\n        }\n        \n        .nav-link.active {\n          color: #FF0808;\n        }\n        \n        .nav-link.active::after {\n          content: \'\';\n          position: absolute;\n          bottom: -5px;\n          left: 0;\n          width: 100%;\n          height: 2px;\n          background-color: #FF0808;\n        }\n                  /* Responsive styles */\n        @media (max-width: 1200px) {\n          #header {\n            padding-left: 50px;\n            padding-right: 50px;\n            margin-left: 0;\n          }\n          \n          img {\n            width: 280px;\n          }\n          \n          #navbar {\n            width: 650px;\n            gap: 30px;\n          }\n        }\n        \n        @media (max-width: 992px) {\n          #header {\n            flex-direction: column;\n            gap: 20px;\n            padding: 25px 20px;\n          }\n          \n          #navbar {\n            width: 100%;\n            flex-wrap: wrap;\n            justify-content: center;\n            gap: 20px;\n          }\n          \n          .nav-link {\n            font-size: 16px;\n          }\n        }\n        \n        @media (max-width: 576px) {\n          img {\n            width: 220px;\n          }\n          \n          .nav-link {\n            font-size: 14px;\n            letter-spacing: 0.5px;\n          }\n        }\n      </style>\n      </style>\n\n      <header id="header">\n        <logo id="logo">\n          <img src="https://i.ibb.co/PG67j7TQ/logo-medium-white.png" alt="Aninet">\n        </logo>\n        <navbar id="navbar">\n          <p class="nav-link" data-route="home">Home</p>\n          <p class="nav-link" data-route="watch">Watch</p>\n          <p class="nav-link" data-route="categories">Categories</p>\n          <p class="nav-link" data-route="profile">Profile</p>\n        </navbar>\n      </header>\n    '}}customElements.define("header-component",t),e.default=t},303:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}async connectedCallback(){const n=await this.fetchPosts();this.render(n)}async fetchPosts(){try{const n=await fetch("../src/Assets/postList.json");return await n.json()}catch(n){return console.error("Error loading posts:",n),[]}}render(n){this.shadowRoot.innerHTML=`\n\n        <style>\n          .post {\n            background: #111111;\n            border-radius: 25px;\n            padding: 15px;\n            margin: 15px 0;\n            color: white;\n            display:flex;\n            flex-direction: column;\n            align-items: center;\n          }\n          .post-header {\n            display: flex;\n            align-items: center;\n            gap: 10px;\n            margin-bottom: 10px;\n            width: 95%;\n          }\n          .user-icon {\n            width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            object-fit: cover;\n          }\n          .image-container {\n            width: 975px;\n            height: 619px;\n            background-color: black;\n            border-radius: 35px;\n            dispay: flex;\n            align-items: center;\n            justify-content: center;\n          }\n\n          .post-image {           \n            width:100%;\n            height:100%;\n            border-radius: 35px;\n            object-fit:scale-down ;\n          }\n\n          .post-footer{\n            width: fill;\n            display:flex;\n            justiy-content: center;\n            align-items:  center;\n            flex-wrap: wrap;\n            padding: 12px 67px;\n\n          }\n          .post-title-container{\n            width: 605px;\n            \n          }\n          .post-title-container h1{\n            font-family: lato;\n            font-weight: bold;\n            font-size: 16px;\n          }\n          \n          .post-actions {\n            display: flex;\n            \n            margin-top: 15px;\n            padding-top: 15px;\n            border-radius: 5px solidrgb(159, 70, 70);\n          }\n          .title-tag-container {\n            display: flex;\n            flex-direction: column;\n          \n          }\n          .tag-container {\n            width:114px;\n            height:44px;\n            justify-content: center;\n          }\n          .tag {\n            background-color: #268774;\n            border-radius: 35px;\n            text-align: center;\n            font-size: 12px;\n          }\n          .action-btn {\n            background: none;\n            border: none;\n            color:rgb(255, 255, 255);\n            display: flex;\n            align-items: center;\n            gap: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 500;\n            padding: 6px 12px;\n            border-radius: 20px;\n            transition: all 0.2s ease;\n          }\n          .action-btn:hover {\n            background: rgba(255, 8, 8, 0.1);\n            color: #FF0808;\n          }\n          \n          .action-btn.liked {\n            color: #FF0808;\n          }\n          .action-btn.notliked {\n            \n            color: white;\n          }\n          \n\n          \n        </style>\n        ${n.map((n=>`\n          <div class="post">\n            <div class="post-header">\n              <img class="user-icon" src="${n.icon}" alt="${n.name}">\n              <div>\n                <strong>${n.name}</strong>\n                <div style="color: #A4A4A4; font-size: 0.8em;">${n.time}</div>\n              </div>\n            </div>\n            <div class="image-container">\n            ${n.image?`<img class="post-image" src="${n.image}" alt="${n.title}">`:""}\n            </div>\n            <div class="post-footer">\n              <div class= "title-tag-container">\n              <div class="post-title-container">\n                <h1>${n.title}</h1>\n              </div>\n              <div class="tag-container">\n                <p class="tag">#${n.tag}</p>\n              </div>\n              </div>\n              <div class="post-actions">\n                \n                <button class="action-btn ${n.liked?"notliked":"liked"}" data-id="${n.id}">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">\n                    <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143q.09.083.176.171a3 3 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15"/>\n                  </svg>\n                </button>\n                <button class="action-btn">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">\n                      <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5"/>\n                      <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z"/>\n                    </svg>\n                </button>\n                <button class="action-btn">\n                  <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="currentColor" class="bi bi-chat" viewBox="0 0 16 16">\n                    <path d="M2.678 11.894a1 1 0 0 1 .287.801 11 11 0 0 1-.398 2c1.395-.323 2.247-.697 2.634-.893a1 1 0 0 1 .71-.074A8 8 0 0 0 8 14c3.996 0 7-2.807 7-6s-3.004-6-7-6-7 2.808-7 6c0 1.468.617 2.83 1.678 3.894m-.493 3.905a22 22 0 0 1-.713.129c-.2.032-.352-.176-.273-.362a10 10 0 0 0 .244-.637l.003-.01c.248-.72.45-1.548.524-2.319C.743 11.37 0 9.76 0 8c0-3.866 3.582-7 8-7s8 3.134 8 7-3.582 7-8 7a9 9 0 0 1-2.347-.306c-.52.263-1.639.742-3.468 1.105"/>\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n    \n          \n        `)).join("")}\n      `,this.shadowRoot.querySelectorAll(".action-btn").forEach((n=>{n.addEventListener("click",(()=>{n.classList.toggle("liked"),n.classList.toggle("notliked")}))}))}}customElements.define("post-list",t),e.default=t},315:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{userIcon;constructor(){super(),this.attachShadow({mode:"open"}),this.userIcon="https://i.pinimg.com/736x/67/ac/6c/67ac6c6c4a7750e34e17a0586c7e596c.jpg"}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n        <style>\n          :host {\n            display: block;\n            background-color: #111111;\n            border-radius: 16px;\n            padding: 20px;\n            margin-bottom: 20px;\n            font-family: 'Roboto', sans-serif;\n          }\n          \n          .post-creator {\n            display: flex;\n            gap: 15px;\n          }\n          \n          .user-icon {\n            width: 48px;\n            height: 48px;\n            border-radius: 50%;\n            object-fit: cover;\n            border: 2px solid #FF0808;\n            flex-shrink: 0;\n          }\n          \n          .post-content {\n            flex: 0.9;\n            display: flex;\n            flex-direction: column;\n            gap: 15px;\n          }\n          \n          .post-input {\n            width: 100%;\n            height: 80px;\n            padding: 20px;\n            margin: 10px;\n            border: 2px solid #555;\n            border-radius: 12px;\n            background-color: #2E2E2E;\n            color: white;\n            font-family: inherit;\n            font-size: 16px;\n          }\n          \n          .post-input:focus {\n            border-color: #FF0808;\n          }\n          \n          .post-input::placeholder {\n            color: #A4A4A4;\n            font-style: italic;\n          }\n          \n          .submit-btn {\n            align-self: flex-end;\n            background-color: #FF0808;\n            color: white;\n            border: none;\n            border-radius: 20px;\n            padding: 8px 20px;\n            font-size: 14px;\n            font-weight: 500;\n            cursor: pointer;\n            transition: all 0.2s;\n          }\n          \n          .submit-btn:hover {\n            background-color: #E00707;\n            transform: translateY(-1px);\n          }\n          \n          .submit-btn:active {\n            transform: translateY(0);\n          }\n        </style>\n        \n        <div class="post-creator">\n          <img class="user-icon" src="${this.userIcon}" alt="User profile">\n          <div class="post-content">\n            <textarea \n              class="post-input" \n              placeholder="Start posting!"></textarea>\n            <button class="submit-btn">Submit</button>\n          </div>\n        </div>\n      `,this.setupEventListeners()}setupEventListeners(){const n=this.shadowRoot.querySelector(".post-input");this.shadowRoot.querySelector(".submit-btn").addEventListener("click",(()=>{const e=n.value.trim();e&&(this.dispatchEvent(new CustomEvent("post-submitted",{detail:{content:e},bubbles:!0,composed:!0})),n.value="")}))}}customElements.define("post-creator",t),e.default=t},374:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    display: block;\n                    width: 100%;\n                    background-color: #111111;\n                    color: white;\n                    padding: 20px 0;\n                    text-align: center;\n                    font-family: \'Roboto\', sans-serif;\n                }\n                \n                .footer-content {\n                    max-width: 1200px;\n                    margin: 0 auto;\n                    padding: 0 20px;\n                    display: flex;\n                    flex-direction: column;\n                    align-items: center;\n                    gap: 15px;\n                }\n                \n                .footer-logo img {\n                    width: 200px;\n                }\n                \n                .footer-links {\n                    display: flex;\n                    gap: 20px;\n                    flex-wrap: wrap;\n                    justify-content: center;\n                }\n                \n                .footer-copyright {\n                    color: #A4A4A4;\n                    font-size: 0.9rem;\n                    margin-top: 10px;\n                }\n            </style>\n            \n            <div class="footer-content">\n                <div class="footer-logo">\n                    <img src="https://i.ibb.co/PG67j7TQ/logo-medium-white.png" alt="Aninet">\n                </div>\n                \n                <div class="footer-links">\n                    <span>About</span>\n                    <span>•</span>\n                    <span>Help</span>\n                    <span>•</span>\n                    <span>Terms</span>\n                    <span>•</span>\n                    <span>Privacy Policy</span>\n                </div>\n                \n                <div class="footer-copyright">\n                    © 2025 Ani-Net. All rights reserved. Contact: info@aninetsocialnetwork.com\n                </div>\n            </div>\n        '}}e.default=t},709:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{connectedCallback(){this.render(),this.querySelector("form").addEventListener("submit",this.handleSubmit)}handleSubmit(n){n.preventDefault();const e=n.target,t=e.username.value.trim(),o=e.email.value.trim(),i=e.password.value,a=e.confirmPassword.value;t&&o&&i&&a?i===a?(console.log("Usuario registrado:",{username:t,email:o}),alert("¡Registro exitoso!"),e.reset()):alert("Las contraseñas no coinciden."):alert("Todos los campos son obligatorios.")}render(){this.innerHTML='\n        <div class="min-h-screen flex items-center justify-center bg-gradient-to-b from-black to-gray-900 px-4 py-12">\n          <form class="bg-white rounded-2xl shadow-2xl p-8 w-full max-w-md space-y-6">\n            <h2 class="text-2xl font-bold text-center text-gray-800">Crear cuenta</h2>\n            \n            <div>\n              <label class="block text-sm font-medium text-gray-700 mb-1">Usuario</label>\n              <input type="text" name="username" required\n                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />\n            </div>\n  \n            <div>\n              <label class="block text-sm font-medium text-gray-700 mb-1">Correo electrónico</label>\n              <input type="email" name="email" required\n                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />\n            </div>\n  \n            <div>\n              <label class="block text-sm font-medium text-gray-700 mb-1">Contraseña</label>\n              <input type="password" name="password" required\n                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />\n            </div>\n  \n            <div>\n              <label class="block text-sm font-medium text-gray-700 mb-1">Confirmar contraseña</label>\n              <input type="password" name="confirmPassword" required\n                class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />\n            </div>\n  \n            <button type="submit"\n              class="w-full bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 rounded-lg transition duration-300">\n              Registrarse\n            </button>\n          </form>\n        </div>\n      '}}e.default=t},837:(n,e)=>{Object.defineProperty(e,"__esModule",{value:!0});class t extends HTMLElement{currentPage=1;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.fetchTopAnime()}async fetchTopAnime(n=1){try{const e=await fetch(`https://api.jikan.moe/v4/top/anime?page=${n}`),t=await e.json();this.renderAnimeCards(t.data),this.currentPage=n}catch(n){console.error("Error fetching anime:",n)}}renderAnimeCards(n){const e=this.shadowRoot.querySelector(".anime-grid");e&&(e.innerHTML=n.map((n=>`\n                <div class="anime-card">\n                    <div class="anime-image">\n                        <img src="${n.images.jpg.image_url}" alt="${n.title}">\n                        <div class="anime-score">⭐ ${n.score||"N/A"}</div>\n                    </div>\n                    <div class="anime-info">\n                        <h3>${n.title}</h3>\n                        <div class="anime-details">\n                            <span>${n.type}</span>\n                            <span>${n.episodes||"?"} eps</span>\n                            <span>${n.status}</span>\n                        </div>\n                        <p class="anime-synopsis">${n.synopsis?.substring(0,100)}...</p>\n                    </div>\n                </div>\n            `)).join(""))}render(){this.shadowRoot.innerHTML='\n            <style>\n                :host {\n                    display: block;\n                    padding: 20px;\n                    background-color: #111111;\n                    color: white;\n                    font-family: \'Lato\', sans-serif;\n                }\n\n                .explore-container {\n                    max-width: 1400px;\n                    margin: 0 auto;\n                    border-radius: 20px;\n                }\n\n                .page-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-bottom: 30px;\n                }\n\n                .page-title {\n                    font-size: 2rem;\n                    color: #FF0808;\n                    margin: 0;\n                }\n\n                .search-bar {\n                    display: flex;\n                    gap: 10px;\n                }\n\n                .search-input {\n                    padding: 10px 15px;\n                    border-radius: 20px;\n                    border: none;\n                    background: #2a2a2a;\n                    color: white;\n                    width: 300px;\n                    font-size: 1rem;\n                }\n\n                .search-btn {\n                    background: #FF0808;\n                    color: white;\n                    border: none;\n                    border-radius: 20px;\n                    padding: 10px 20px;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                }\n\n                .search-btn:hover {\n                    background: #E00707;\n                }\n\n                .anime-grid {\n                    display: grid;\n                    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n                    gap: 25px;\n                    margin-top: 30px;\n                }\n\n                .anime-card {\n                    background: #1a1a1a;\n                    border-radius: 15px;\n                    overflow: hidden;\n                    transition: transform 0.3s, box-shadow 0.3s;\n                    cursor: pointer;\n                }\n\n                .anime-card:hover {\n                    transform: translateY(-5px);\n                    box-shadow: 0 10px 20px rgba(255, 8, 8, 0.2);\n                }\n\n                .anime-image {\n                    position: relative;\n                    height: 350px;\n                    overflow: hidden;\n                }\n\n                .anime-image img {\n                    width: 100%;\n                    height: 100%;\n                    object-fit: cover;\n                    transition: transform 0.5s;\n                }\n\n                .anime-card:hover .anime-image img {\n                    transform: scale(1.05);\n                }\n\n                .anime-score {\n                    position: absolute;\n                    top: 10px;\n                    right: 10px;\n                    background: rgba(0, 0, 0, 0.7);\n                    padding: 5px 10px;\n                    border-radius: 20px;\n                    font-weight: bold;\n                }\n\n                .anime-info {\n                    padding: 15px;\n                }\n\n                .anime-info h3 {\n                    margin: 0 0 10px 0;\n                    font-size: 1.2rem;\n                    white-space: nowrap;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                }\n\n                .anime-details {\n                    display: flex;\n                    gap: 10px;\n                    margin-bottom: 10px;\n                    font-size: 0.8rem;\n                    color: #A4A4A4;\n                }\n\n                .anime-synopsis {\n                    font-size: 0.9rem;\n                    color: #e0e0e0;\n                    margin: 0;\n                    display: -webkit-box;\n                    -webkit-line-clamp: 3;\n                    -webkit-box-orient: vertical;\n                    overflow: hidden;\n                }\n\n                .pagination {\n                    display: flex;\n                    justify-content: center;\n                    gap: 10px;\n                    margin-top: 40px;\n                }\n\n                .page-btn {\n                    background: #2a2a2a;\n                    color: white;\n                    border: none;\n                    border-radius: 5px;\n                    padding: 8px 15px;\n                    cursor: pointer;\n                    transition: all 0.2s;\n                }\n\n                .page-btn:hover {\n                    background: #FF0808;\n                }\n\n                .page-btn.active {\n                    background: #FF0808;\n                    font-weight: bold;\n                }\n\n                @media (max-width: 768px) {\n                    .page-header {\n                        flex-direction: column;\n                        gap: 15px;\n                        align-items: flex-start;\n                    }\n\n                    .search-bar {\n                        width: 100%;\n                    }\n\n                    .search-input {\n                        width: 100%;\n                    }\n\n                    .anime-grid {\n                        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n                    }\n\n                    .anime-image {\n                        height: 300px;\n                    }\n                }\n\n                @media (max-width: 480px) {\n                    .anime-grid {\n                        grid-template-columns: 1fr;\n                    }\n\n                    .anime-image {\n                        height: 250px;\n                    }\n                }\n            </style>\n\n            <div class="explore-container">\n                <div class="page-header">\n                    <h1 class="page-title">Explore Anime</h1>\n                    <div class="search-bar">\n                        <input type="text" class="search-input" placeholder="Search anime...">\n                        <button class="search-btn">Search</button>\n                    </div>\n                </div>\n\n                <div class="anime-grid"></div>\n\n                <div class="pagination">\n                    <button class="page-btn prev-btn">Previous</button>\n                    <button class="page-btn active">1</button>\n                    <button class="page-btn">2</button>\n                    <button class="page-btn">3</button>\n                    <button class="page-btn next-btn">Next</button>\n                </div>\n            </div>\n        ',this.setupEventListeners()}setupEventListeners(){this.shadowRoot.querySelector(".prev-btn")?.addEventListener("click",(()=>{this.currentPage>1&&this.fetchTopAnime(this.currentPage-1)})),this.shadowRoot.querySelector(".next-btn")?.addEventListener("click",(()=>{this.fetchTopAnime(this.currentPage+1)})),this.shadowRoot.querySelector(".search-btn")?.addEventListener("click",(()=>{this.handleSearch()})),this.shadowRoot.querySelector(".search-input")?.addEventListener("keypress",(n=>{"Enter"===n.key&&this.handleSearch()})),this.shadowRoot.querySelectorAll(".anime-card").forEach((n=>{n.addEventListener("click",(n=>{const e=n.currentTarget.querySelector("h3")?.textContent;console.log("Selected anime:",e)}))}))}async handleSearch(){const n=this.shadowRoot.querySelector(".search-input").value.trim();if(n)try{const e=await fetch(`https://api.jikan.moe/v4/anime?q=${n}`),t=await e.json();this.renderAnimeCards(t.data)}catch(n){console.error("Error searching anime:",n)}}}customElements.define("explore-page",t),e.default=t}},e={};!function t(o){var i=e[o];if(void 0!==i)return i.exports;var a=e[o]={exports:{}};return n[o].call(a.exports,a,a.exports,t),a.exports}(156)})();